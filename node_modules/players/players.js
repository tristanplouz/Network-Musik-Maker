module.exports =function(){
    
    this.co =[];
    this.salonContent = {};
    
    this.new = function(user,id,salon,instru){ 
        var statut = "none";
        if(!this.salonContent.hasOwnProperty(salon)){ //Si le salon n'existe pas:creer le salon et mets l'user en leader
            
            this.salonContent[salon] = {};
            statut = "leader";
            console.log('new leader '+user+' dans le salon '+salon);
            
        }
        if(!this.salonContent.hasOwnProperty(user)){ //ajoute l'user au salon
            this.salonContent[salon][user] = instru;
        }
        var player = {  "username":user,
                        "id":id,
                        'salon':salon,
                        'instrument':instru,
                        'leading':statut
                    };
        this.co.push(player);
        console.log(this.salonContent);
        this.connected();
    }; //Cr√©er un nouvel user et gere les salons 

    this.discoPlayer = function(id){ 
        
        for (var i = 0; i < this.co.length; i++) {
            if(id == this.co[i].id){
                console.log('deconnection de '+this.co[i].username);
                delete this.salonContent[this.co[i].salon][this.co[i].username];
                this.co.pop(i);
                console.log('deconnecter');
            }
        }
            
    };  //retire l'user des tableaux et objet gerant les users
    
    this.connected =function(){
        
        socket.to(this.co[this.co.length].salon).emit('connected',this.salonContent[this.co[this.co.length]]);
        
    }; //Gere la redistribustion des clients
};